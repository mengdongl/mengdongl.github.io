{"version":3,"sources":["utils/http.ts","auth-provider.ts","utils/index.ts","utils/use-async.ts","components/lib.tsx","store/auth.slice.ts","context/auth-context.tsx","screens/unauthenticated-app/login.tsx","screens/unauthenticated-app/register.tsx","screens/unauthenticated-app/index.tsx","components/id-select.tsx","screens/project-list/search-panal.tsx","utils/use-optimistic-options.ts","utils/project.ts","utils/url.ts","screens/project-list/utils.ts","screens/project-list/list.tsx","screens/project-list/index.tsx","utils/task.ts","screens/kanban/utils.ts","assets/task.svg","assets/bug.svg","utils/task-type.ts","screens/kanban/create-task.tsx","components/mark.tsx","screens/kanban/kanban-column.tsx","utils/kanban.ts","screens/kanban/create-kanban.tsx","components/task-type-select.tsx","utils/user.ts","components/user-select.tsx","screens/kanban/search-panel.tsx","utils/epic.ts","components/epic-select.tsx","screens/kanban/task-modal.tsx","screens/kanban/index.tsx","screens/epic/utils.ts","screens/epic/create-epic.tsx","screens/epic/index.tsx","screens/project/index.tsx","components/project-type-select.tsx","screens/project-list/project-modal.tsx","screens/works/list.tsx","screens/works/utils.ts","screens/works/search-panal.tsx","screens/works/work-list.tsx","screens/works/index.tsx","authenticated-app.tsx","App.tsx","reportWebVitals.ts","store/index.ts","context/index.tsx","components/error-boundary.tsx","index.tsx"],"names":["apiUrl","process","http","endpoint","a","data","headers","token","customConfig","config","method","Authorization","requestUrl","toUpperCase","qs","stringify","body","JSON","regx","RegExp","test","fetch","then","response","status","auth","window","location","reload","Promise","reject","message","json","ok","useHttp","user","useAuth","localTokenKey","handleUserResponse","localStorage","setItem","logout","removeItem","cleanObject","object","result","Object","keys","forEach","key","value","undefined","useMount","callback","useEffect","useDebounce","delay","useState","paramValue","setParamValue","timeout","setTimeout","clearTimeout","defaultState","stat","error","defaultConfig","isThrowError","useAsync","initialState","initalConfig","state","setState","throwConfig","mountedRef","useRef","current","useMountedRef","setData","setError","isIdel","isLoading","isSuccess","isError","run","promise","Error","res","catch","err","Row","styled","div","props","marginBottom","between","marginRight","FullPageLoading","FullPage","FullPageError","Text","type","ErrorBox","ScreenContainer","authSlice","createSlice","name","reducers","setUser","action","payload","actions","sleectUser","login","dispatch","register","React","createContext","displayName","bootstrapUser","getItem","AuthProvider","children","useDispatch","useSelector","authStore","LoginScreen","onError","handleSubmit","values","onFinish","Item","rules","required","placeholder","autoComplete","LongButton","loading","htmlType","RegisterScreen","passwordc","password","UnauthenticatedApp","isRegister","setIsRegister","Container","Header","MainContainer","Logo","src","ShadowCard","Title","onClick","main","img","Card","Button","h2","header","IdSelect","onChange","defaultOptionName","options","restProps","length","toNumber","Option","map","option","id","isNaN","Number","SearchPanel","param","setParam","users","style","layout","target","personId","useConfig","queryKey","queryClient","useQueryClient","onSuccess","invalidateQueries","onMutate","previousItems","getQueryData","setQueryData","old","newItem","context","useDeleteConfig","filter","item","useEditConfig","useAddConfig","useProjects","client","rest","useProject","useQuery","enabled","Boolean","useAddProject","useMutation","params","useEditProject","useProjectTypes","useUrlParams","useSearchParams","searchParams","setUrlParams","useSetUrlParams","stateKeys","useMemo","obj","filteredEntries","entries","includes","fromEntries","subset","setSearchParams","o","useRouteType","useLocation","pathname","split","useProjectsSearchParams","useProjectsQueryKey","useProjectModal","projectCreate","setProjectCreate","editingProjectId","setEditingProjectId","editingProject","projectModalOpen","open","close","startEdit","List","types","columns","width","render","project","color","find","title","sorter","b","localeCompare","ProjectNameColumn","to","String","fontSize","percent","showInfo","dataIndex","created","dayjs","format","index","pagination","rowKey","column","showHeader","More","deleteProject","useDeleteProject","mutate","useContext","ProjectListContext","toTop","overlay","confirmDeleteProject","ProjectListScreen","setUsers","list","console","log","Provider","cloneList","top","i","TableContainer","TableHeader","dataSource","whyDidYouRender","useTasks","useProjectIdInUrl","match","useProjectInUrl","useKanbanSearchParams","projectId","useKanbansQueryKey","useTaskSearchParams","debouncedName","typeId","processorId","tagId","taskFrom","useTaskQueryKey","useTaskModal","editingTaskId","setEditingTaskId","useTask","editingTask","useCallback","useTaskTypes","CreateTask","kanbanId","handleRefresh","setName","inputMode","setInputMode","addTask","useAddTask","currentProject","toggle","submit","projectName","onBlur","autoFocus","onPressEnter","evt","Mark","keyword","arr","str","KanbanColumn","kanban","taskSearchParams","allTasks","tasks","task","TasksContainer","TaskTypeIcon","taskTypes","taskType","alt","taskIcon","bugIcon","TaskCard","cursor","useDeleteKanban","Modal","confirm","okText","cancelText","onOk","CreateKanban","addKanban","useAddKanban","mutateAsync","size","TaskTypeSelect","useUser","UserSelect","taskName","setUrlParam","useEpics","EpicSelect","epics","labelCol","span","wrapperCol","TaskModal","useEditTask","editTask","editLoading","useForm","form","getFieldsValue","resetFields","setFieldsValue","forceRender","visible","onCancel","confirmLoading","initialValues","label","KanbanScreen","useKanbans","kanbans","ColumnsContainer","useEpicSearchParams","useEpicsQueryKey","CreateEpic","useAddEpic","addEpic","onClose","destroyOnClose","textAlign","EpicScreen","deleteEpic","useDeleteEpic","epicCreateOpen","setEpicCreateOpen","overflow","itemLayout","renderItem","epic","Meta","content","confirmDeleteEpic","description","start","end","epicId","ProjectScreen","routeType","Aside","mode","selectedKeys","Main","path","element","replace","aside","ProjectTypeSelect","ProjectModal","mutateLoading","setFields","statusList","WorkListContext","taskStatus","icon","TagOutlined","note","useWorksSearchParams","OperationsSlot","right","activeKey","defaultValue","tabBarExtraContent","TabPane","tab","WorkList","navigate","useNavigate","projectTypes","WorkListScreen","Top","Body","ProjectItems","slice","handleNav","route","gutter","hoverable","bodyStyle","paddingLeft","paddingRight","ProjectItem","padding","ProjectItemContent","height","margin","strokeWidth","className","AuthenticatedApp","PageHeader","selectedRoutes","HeaderLeft","SoftWareLogo","Icon","NavMenu","keyPath","domEvent","HeaderRight","UserContainer","Menu","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","AppProviders","QueryClientProvider","QueryClient","initialIsOpen","ErrorBoundary","this","fallbackRender","Component","loadServer","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58c452df.chunk.js","sourcesContent":["import { useAuth } from './../context/auth-context';\r\nimport qs from \"qs\";\r\nimport * as auth from \"auth-provider\";\r\n\r\nexport const apiUrl = process.env.REACT_APP_API_URL;\r\n\r\ninterface Config extends RequestInit {\r\n  data?: object;\r\n  token?: string;\r\n}\r\n\r\nexport const http = async (\r\n  endpoint: string,\r\n  { data, headers, token, ...customConfig }: Config = {}\r\n) => {\r\n  const config = {\r\n    method: \"GET\",\r\n    headers: {\r\n      Authorization: token ? `Bearer ${token}` : \"\",\r\n      \"Content-Type\": data ? \"application/json\" : \"\",\r\n    },\r\n    ...customConfig,\r\n  };\r\n  let requestUrl = ''\r\n  if (config.method.toUpperCase() === \"GET\") {\r\n    endpoint += `?${qs.stringify(data)}`;\r\n  } else {\r\n    config.body = JSON.stringify(data || {});\r\n  }\r\n  const regx = new RegExp(/^(https?)/)\r\n  if (regx.test(endpoint)) {\r\n    requestUrl = endpoint\r\n  } else {\r\n    requestUrl = `${apiUrl}${endpoint}`\r\n  }\r\n  return fetch(requestUrl, config).then(async (response) => {\r\n    if (response.status === 401) {\r\n      await auth.logout();\r\n      window.location.reload();\r\n      return Promise.reject({ message: \"请重新登录\" });\r\n    }\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      return data;\r\n    } else {\r\n      return Promise.reject(data);\r\n    }\r\n  });\r\n};\r\n\r\nexport const useHttp = () => {\r\n    const { user } = useAuth()\r\n    return (...[endpoint,config]: Parameters<typeof http>) => http(endpoint,{...config, token: user?.token})\r\n}\r\n","import { http } from \"utils/http\";\r\nimport { User } from \"./types/User\";\r\nexport const localTokenKey = \"__auth_provider_token__\";\r\n\r\nexport const getToken = () => window.localStorage.getItem(localTokenKey);\r\n\r\nexport const handleUserResponse = ({ user }: { user: User }) => {\r\n  window.localStorage.setItem(localTokenKey, user.token || \"\");\r\n  return user;\r\n};\r\n\r\nexport const login = (data: { username: string; password: string }) => {\r\n  return http(`/login`, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data,\r\n  })\r\n    .then(async (res) => {\r\n      return handleUserResponse(res);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const register = (data: { username: string; password: string }) => {\r\n  return http(`/register`, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    data,\r\n  })\r\n    .then(async (res) => {\r\n      return handleUserResponse(res);\r\n    })\r\n    .catch((err) => {\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const logout = async () => window.localStorage.removeItem(localTokenKey);\r\n","import { useEffect, useRef, useState } from \"react\";\r\nexport const isVoid = (value: unknown) =>\r\n  value === undefined || value === null || value === \"\";\r\n\r\nexport const cleanObject = (object?: { [index: string]: unknown }) => {\r\n  if(!object){\r\n    return {}\r\n  }\r\n  const result = { ...object };\r\n  Object.keys(object).forEach((key) => {\r\n    if (isVoid(object[key])) {\r\n      delete result[key];\r\n    }\r\n  });\r\n  return result;\r\n};\r\n\r\nexport const subset = <\r\n  O extends { [key in string]: unknown },\r\n  K extends keyof O\r\n>(\r\n  obj: O,\r\n  keys: K[]\r\n) => {\r\n  const filteredEntries = Object.entries(obj).filter(([key]) =>\r\n    keys.includes(key as K)\r\n  );\r\n  return Object.fromEntries(filteredEntries) as Pick<O, K>;\r\n};\r\n\r\nexport const useMount = (callback: () => void) => {\r\n  useEffect(() => {\r\n    callback();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n};\r\n\r\nexport const useDebounce = <T>(value: T, delay?: number) => {\r\n  const [paramValue, setParamValue] = useState(value);\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setParamValue(value);\r\n    }, delay);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [value]);\r\n\r\n  return paramValue;\r\n};\r\n\r\nexport const useArray = <T>(value: T[]) => {\r\n  const [resultValue,setResultValue] = useState(value);\r\n  const clear = () => setResultValue([])\r\n  const removeIndex = (index: number) => {\r\n    const array = [...resultValue]\r\n    array.splice(index,1)\r\n    setResultValue(array)\r\n  };\r\n  const add = (value: T) => setResultValue([...resultValue,value])\r\n  return { value: resultValue, clear, removeIndex, add };\r\n};\r\n\r\nexport const useMountedRef = () => {\r\n  const mountedRef = useRef(false)\r\n\r\n  useEffect(()=>{\r\n    mountedRef.current = true\r\n    return () => {\r\n      mountedRef.current = false\r\n    }\r\n  })\r\n\r\n  return mountedRef\r\n}","import { useState } from \"react\";\r\nimport { useMountedRef } from \"utils\";\r\ninterface State<D> {\r\n  stat: \"idel\" | \"loading\" | \"success\" | \"error\";\r\n  data: D | null;\r\n  error: Error | null;\r\n}\r\n\r\nconst defaultState: State<null> = {\r\n  stat: \"idel\",\r\n  data: null,\r\n  error: null,\r\n};\r\n\r\nconst defaultConfig = {\r\n  isThrowError: false,\r\n};\r\n\r\nexport const useAsync = <D>(\r\n  initialState?: State<D>,\r\n  initalConfig?: typeof defaultConfig\r\n) => {\r\n  const [state, setState] = useState<State<D>>({\r\n    ...defaultState,\r\n    ...initialState,\r\n  });\r\n\r\n  const throwConfig = {\r\n    ...defaultConfig,\r\n    ...initalConfig,\r\n  };\r\n\r\n  const mountedRef = useMountedRef();\r\n\r\n  const setData = (data: D) => {\r\n    setState({\r\n      stat: \"success\",\r\n      data,\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  const setError = (error: Error) => {\r\n    setState({\r\n      stat: \"error\",\r\n      data: null,\r\n      error,\r\n    });\r\n  };\r\n\r\n  const run = (promise: Promise<D>) => {\r\n    if (!promise || !promise.then) {\r\n      throw new Error(\"请传入 Promise 类型数据\");\r\n    }\r\n    setState({\r\n      stat: \"loading\",\r\n      data: null,\r\n      error: null,\r\n    });\r\n    return promise\r\n      .then((res) => {\r\n        if (mountedRef.current)\r\n          setData(res)\r\n        return res\r\n      })\r\n      .catch((err: Error) => {\r\n        setError(err);\r\n        if (throwConfig.isThrowError) return Promise.reject(err);\r\n        return err;\r\n      });\r\n  };\r\n\r\n  return {\r\n    isIdel: state.stat === \"idel\",\r\n    isLoading: state.stat === \"loading\",\r\n    isSuccess: state.stat === \"success\",\r\n    isError: state.stat === \"error\",\r\n    run,\r\n    setData,\r\n    setError,\r\n    ...state,\r\n  };\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Spin, Typography } from \"antd\";\r\nimport { DevTools } from \"jira-dev-tool\";\r\n\r\nexport const Row = styled.div<{\r\n  marginRight?: boolean | number;\r\n  marginBottom?: boolean | number;\r\n  between?:boolean;\r\n}>`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${(props) =>\r\n    typeof props.marginBottom === \"number\"\r\n      ? props.marginBottom + \"rem\"\r\n      : props.marginBottom\r\n      ? \"2rem\"\r\n      : \"0\"};\r\n  justify-content: ${props => props.between?'space-between':''};\r\n  & > * {\r\n    margin-right: ${(props) =>\r\n      typeof props.marginRight === \"number\"\r\n        ? props.marginRight + \"rem\"\r\n        : props.marginRight\r\n        ? \"3rem\"\r\n        : \"0rem\"};\r\n    margin-top: 0 !important;\r\n    margin-bottom: 0 !important;\r\n  }\r\n`;\r\n\r\nexport const FullPageLoading = () => {\r\n  return (\r\n    <FullPage>\r\n      <Spin></Spin>\r\n    </FullPage>\r\n  );\r\n};\r\n\r\nexport const FullPageError = ({ error }: { error: Error | null }) => (\r\n  <FullPage>\r\n    <DevTools></DevTools>\r\n    <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>\r\n  </FullPage>\r\n);\r\n\r\nexport const ErrorBox = ({error}:{error:Error | undefined}) => {\r\n  if(!error) return null\r\n  return <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>\r\n}\r\n\r\nconst FullPage = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const ScreenContainer = styled.div`\r\n  padding: 3.2rem;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","import { AuthForm, bootstrapUser } from \"./../context/auth-context\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { User } from \"types/User\";\r\nimport { appDispatch, rootState } from \"store\";\r\nimport * as auth from \"auth-provider\";\r\n\r\nexport interface State {\r\n  user: User | null;\r\n}\r\nconst initialState: State = {\r\n  user: null,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, action) {\r\n      state.user = action.payload;\r\n    },\r\n  },\r\n});\r\nexport const { setUser } = authSlice.actions;\r\n\r\nexport const sleectUser = (state: rootState) => state.auth.user;\r\n\r\nexport const login = (data: AuthForm) => (dispatch: appDispatch) =>\r\n  auth.login(data).then((res) => dispatch(setUser(res)));\r\n\r\nexport const register = (data: AuthForm) => (dispatch: appDispatch) =>\r\n  auth.register(data).then((res) => dispatch(setUser(res)));\r\n\r\nexport const logout = () => (dispatch: appDispatch) =>\r\n  auth.logout().then(() => dispatch(setUser(null)));\r\n\r\nexport const bootstrap = () => (dispatch: appDispatch) =>\r\n  bootstrapUser().then((res) => dispatch(setUser(res)));\r\n","import React, { ReactNode } from \"react\";\r\nimport * as auth from \"auth-provider\";\r\nimport { User } from \"types/User\";\r\nimport { useMount } from \"utils\";\r\nimport { http } from \"utils/http\";\r\nimport { useAsync } from \"utils/use-async\";\r\nimport { FullPageError, FullPageLoading } from \"components/lib\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { sleectUser } from \"store/auth.slice\";\r\nimport * as authStore from \"store/auth.slice\";\r\n\r\nexport interface AuthForm {\r\n  username: string;\r\n  password: string;\r\n}\r\ninterface Context {\r\n  user: User | null;\r\n  login: (param: AuthForm) => Promise<void>;\r\n  register: (param: AuthForm) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n}\r\nconst AuthContext = React.createContext<Context | undefined>(undefined);\r\nAuthContext.displayName = \"AuthContext\";\r\n\r\nexport const bootstrapUser = async () => {\r\n  let token = auth.getToken();\r\n  if (token) {\r\n    const data = await http(\"/me\", { token: token });\r\n    return data.user;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const { run, isLoading, isIdel, isError, error } = useAsync<User | null>(\r\n    undefined,\r\n    { isThrowError: false }\r\n  );\r\n  const dispatch: (...args: unknown[]) => Promise<User> = useDispatch();\r\n  useMount(() => {\r\n    run(dispatch(authStore.bootstrap()));\r\n  });\r\n\r\n  if (isLoading || isIdel) {\r\n    return <FullPageLoading></FullPageLoading>;\r\n  }\r\n\r\n  if (isError) {\r\n    return <FullPageError error={error}></FullPageError>;\r\n  }\r\n\r\n  // return <div>{children}</div>\r\n  return <div>{children}</div>\r\n};\r\n\r\n// export const useAuth = () => {\r\n//     const context = useContext(AuthContext)\r\n//     if(!context){\r\n//         throw new Error('useAuth only used in AuthProvider')\r\n//     }\r\n//     return context\r\n// }\r\n\r\nexport const useAuth = () => {\r\n  const user = useSelector(sleectUser);\r\n  const dispatch: (...args: unknown[]) => Promise<User> = useDispatch();\r\n\r\n  const login = (data: AuthForm) => dispatch(authStore.login(data));\r\n  const register = (data: AuthForm) => dispatch(authStore.register(data));\r\n  const logout = () => dispatch(authStore.logout());\r\n\r\n  return { user, login, register, logout };\r\n};\r\n","import React from \"react\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { Form, Input } from \"antd\";\r\nimport { LongButton } from \".\";\r\nimport { useAsync } from \"utils/use-async\";\r\n\r\nexport const LoginScreen = ({onError}: {onError: (error: Error|null)=>void;}) => {\r\n  const { login } = useAuth();\r\n  const {run,isLoading} = useAsync(undefined,{isThrowError:true})\r\n  const handleSubmit = async (values:{username: string, password: string}) => {\r\n    try {\r\n    await run(login(values))\r\n    } catch (error) {\r\n      onError(error as Error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit}>\r\n      <Form.Item\r\n        name={\"username\"}\r\n        rules={[{ required: true, message: \"请输入用户名\" }]}\r\n      >\r\n        <Input placeholder={\"用户名\"} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"password\"}\r\n        rules={[{ required: true, message: \"请输入密码\" }]}\r\n      >\r\n        <Input type={'password'} placeholder={\"密码\"} autoComplete={'true'}/>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType={\"submit\"} type={\"primary\"}>\r\n          登录\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport { Form, Input } from \"antd\";\r\nimport { LongButton } from '.'\r\nimport { useAsync } from \"utils/use-async\";\r\n\r\nexport const RegisterScreen = ({onError}: {onError: (error: Error|null)=>void;}) => {\r\n  const { register } = useAuth();\r\n  const {run,isLoading} = useAsync(undefined,{isThrowError:true})\r\n  const handleSubmit = async (values:{username: string; password: string; passwordc:string}) => {\r\n    try {\r\n      if(values.passwordc!==values.password){\r\n        throw new Error('输入确认密码不一致')\r\n      }\r\n      await run(register(values))\r\n    } catch (error) {\r\n      onError(error as Error)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={handleSubmit}>\r\n      <Form.Item\r\n        name={\"username\"}\r\n        rules={[{ required: true, message: \"请输入用户名\" }]}\r\n      >\r\n        <Input type=\"text\" placeholder={\"用户名\"} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"password\"}\r\n        rules={[{ required: true, message: \"请输入密码\" }]}\r\n      >\r\n        <Input type={\"password\"} placeholder={'密码'} autoComplete={'true'}/>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name={\"passwordc\"}\r\n        rules={[{ required: true, message: \"请输入确认密码\" }]}\r\n      >\r\n        <Input type={\"password\"} placeholder={'确认密码'} autoComplete={'true'}/>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <LongButton loading={isLoading} htmlType={\"submit\"} type={\"primary\"}>\r\n          注册\r\n        </LongButton>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import { Button, Card, Divider, Typography } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { LoginScreen } from \"./login\";\r\nimport { RegisterScreen } from \"./register\";\r\nimport styled from \"@emotion/styled\";\r\n// import logo from \"assets/logo.svg\";\r\n// import left from \"assets/left.svg\";\r\n// import right from \"assets/right.svg\";\r\n\r\nexport const UnauthenticatedApp = () => {\r\n  const [isRegister, setIsRegister] = useState(false);\r\n  const [error, setError] = useState<Error | null>(null);\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        {/* <Icon src={logo}></Icon> */}\r\n      </Header>\r\n      {/* <Background/> */}\r\n      <MainContainer>\r\n        <Logo src=\"/text.png\"></Logo>\r\n        <ShadowCard>\r\n          <Title>{isRegister ? \"请注册\" : \"统一认证登录\"}</Title>\r\n          {error ? (\r\n            <Typography.Text type={\"danger\"}>{error?.message}</Typography.Text>\r\n          ) : null}\r\n          {isRegister ? (\r\n            <RegisterScreen onError={setError}></RegisterScreen>\r\n          ) : (\r\n            <LoginScreen onError={setError}></LoginScreen>\r\n          )}\r\n          <Divider></Divider>\r\n          <Button type={\"link\"} onClick={() => setIsRegister(!isRegister)}>\r\n            {isRegister ? \"已经有帐号了？直接登录\" : \"没有账号?注册新账号\"}\r\n          </Button>\r\n        </ShadowCard>\r\n      </MainContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst MainContainer = styled.main`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  width: 200px;\r\n  height: 100px;\r\n`;\r\n\r\nconst ShadowCard = styled(Card)`\r\n  width: 30rem;\r\n  min-height: 36rem;\r\n  padding: 3.2rem 2rem;\r\n  margin-left: 20rem;\r\n  border-radius: 0.3rem;\r\n  box-sizing: border-box;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0 0 10px;\r\n  text-align: center;\r\n  background: url(/login-box.png) no-repeat;\r\n  background-size: 100% 100%;\r\n  border: none;\r\n`;\r\nexport const LongButton = styled(Button)`\r\n  width: 100%;\r\n`;\r\n\r\nconst Title = styled.h2`\r\n  margin: 3.4rem 0 2.4rem;\r\n  color: rgb(94, 108, 132);\r\n  font-size: 1.5rem;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 8rem;\r\n`;\r\n\r\n// const Icon = styled.img`\r\n//   width: 8rem;\r\n//   margin-left: 2rem;\r\n// `;\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 100vh;\r\n  background: url(/login-bg.png) no-repeat 50%/100% auto;\r\n`;\r\n\r\n// const Background = styled.div`\r\n//   position: absolute;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background-repeat: no-repeat;\r\n//   background-attachment: fixed;\r\n//   background-position: left bottom, right bottom;\r\n//   background-size: calc(((100vw - 40rem) / 2) - 3.2rem),\r\n//     calc(((100vw - 40rem) / 2) - 3.2rem), cover;\r\n//   background-image: url(${left}), url(${right});\r\n// `;\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\n\r\ntype SelectProps = React.ComponentProps<typeof Select>;\r\n\r\ntype Raw = number|string\r\ninterface IdSelectProps extends Omit<SelectProps, \"value\" | \"onChange\" | \"options\"> {\r\n  value?: Raw | null | undefined;\r\n  onChange?: (value?: number) => void;\r\n  defaultOptionName?: string;\r\n  options?: { name: string; id: number }[];\r\n}\r\n\r\n/**\r\n * value 可以传入多种类型的值\r\n * onChange只会回调 number|undefined 类型\r\n * 当 isNaN(Number(value)) 为true的时候，代表选择默认类型\r\n * 当选择默认类型的时候，onChange会回调undefined\r\n * @param props\r\n * @constructor\r\n */\r\nexport const IdSelect = (props: IdSelectProps) => {\r\n  const { value, onChange, defaultOptionName, options, ...restProps } = props;\r\n  return (\r\n    <Select\r\n      value={options?.length ? toNumber(value) : 0 }\r\n      onChange={(value) => onChange?.(toNumber(value) || undefined)}\r\n      {...restProps}\r\n    >\r\n      {defaultOptionName ? (\r\n        <Select.Option value={0}>{defaultOptionName}</Select.Option>\r\n      ) : null}\r\n      {options?.map((option) => (\r\n        <Select.Option key={option.id} value={option.id}>\r\n          {option.name}\r\n        </Select.Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\n\r\nconst toNumber = (value: unknown) => (isNaN(Number(value)) ? 0 : Number(value));\r\n","import { Input, Form } from \"antd\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport React from \"react\";\r\nimport { Project } from \"types/project\";\r\nimport { User } from \"../../types/User\";\r\n\r\ninterface SearchPanelProps {\r\n  param: Partial<Pick<Project, \"name\" | \"personId\">>;\r\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\r\n  users: User[];\r\n}\r\n\r\nexport const SearchPanel = ({ param, setParam, users }: SearchPanelProps) => {\r\n  return (\r\n    <Form style={{ marginBottom: \"2rem\" }} layout={\"inline\"}>\r\n      <Form.Item>\r\n        <Input\r\n          placeholder={\"项目名\"}\r\n          value={param.name}\r\n          onChange={(value) => setParam({ ...param, name: value.target.value })}\r\n        ></Input>\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <IdSelect\r\n          value={users.length ? param.personId : undefined}\r\n          defaultOptionName={\"负责人\"}\r\n          options={users}\r\n          onChange={(value) => setParam({ ...param, personId: value })}\r\n        ></IdSelect>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n","import { QueryKey, useQueryClient } from \"react-query\";\r\n\r\nexport const useConfig = (\r\n  queryKey: QueryKey,\r\n  callback: (target: any, old?: any[]) => any[]\r\n) => {\r\n  const queryClient = useQueryClient();\r\n  return {\r\n    onSuccess: () => queryClient.invalidateQueries(queryKey),\r\n    async onMutate(target: any) {\r\n      const previousItems = queryClient.getQueryData(queryKey);\r\n      queryClient.setQueryData(queryKey, (old?: any[]) => {\r\n        return callback(target, old);\r\n      });\r\n      return { previousItems };\r\n    },\r\n    onError(error: any, newItem: any, context: any) {\r\n      queryClient.setQueryData(queryKey, context.previousItems);\r\n    },\r\n  };\r\n};\r\n\r\nexport const useDeleteConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) => old?.filter((item) => item.id !== target.id) || []\r\n  );\r\nexport const useEditConfig = (queryKey: QueryKey) =>\r\n  useConfig(\r\n    queryKey,\r\n    (target, old) =>\r\n      old?.map((item) =>\r\n        item.id === target.id ? { ...item, ...target } : item\r\n      ) || []\r\n  );\r\nexport const useAddConfig = (queryKey: QueryKey) =>\r\n  useConfig(queryKey, (target, old) => (old ? [...old, target] : []));\r\n\r\n","import { useHttp } from \"./http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { Project } from \"types/project\";\r\nimport {\r\n  useAddConfig,\r\n  useDeleteConfig,\r\n  useEditConfig,\r\n} from \"utils/use-optimistic-options\";\r\nimport { useAsync } from \"utils/use-async\";\r\nimport { useEffect } from \"react\";\r\nexport const useProjects = (param?: Partial<Project>) => {\r\n  const client = useHttp();\r\n  // return useQuery<Project[]>([\"projects\", cleanObject(param)], () =>\r\n  //   client(\"/projects\", { data: param })\r\n  // );\r\n  const { run, ...rest } = useAsync<Project[]>(undefined, {\r\n    isThrowError: true,\r\n  });\r\n  useEffect(() => {\r\n    run(client(\"/projects\", { data: param }));\r\n  }, [param]);\r\n  return {\r\n    ...rest,\r\n  };\r\n};\r\n\r\nexport const useProject = (id?: number) => {\r\n  const client = useHttp();\r\n  return useQuery<Project>(\r\n    [\"project\", { id }],\r\n    () => client(`/projects/${id}`),\r\n    {\r\n      enabled: Boolean(id),\r\n    }\r\n  );\r\n};\r\n\r\nexport const useAddProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`/projects`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useEditProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Project>) =>\r\n      client(`/projects/${params.id}`, {\r\n        method: \"PATCH\",\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteProject = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    ({ id }: { id: number }) =>\r\n      client(`/projects/${id}`, {\r\n        method: \"DELETE\",\r\n      }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useProjectTypes = () => {\r\n  const client = useHttp();\r\n  return useQuery<{ name: string; id: number }[]>(\"types\", () =>\r\n    client(\"https://my-json-server.typicode.com/mengdongl/yixiao/projectType\")\r\n  );\r\n};\r\n","import { useMemo, useState } from \"react\";\r\nimport { URLSearchParamsInit, useSearchParams, useLocation } from \"react-router-dom\";\r\nimport { cleanObject, subset } from \"utils\";\r\n\r\nexport const useUrlParams = <K extends string>(keys: K[]) => {\r\n  const [searchParams] = useSearchParams();\r\n  const setUrlParams = useSetUrlParams();\r\n  const [stateKeys] = useState(keys);\r\n  return [\r\n    useMemo(\r\n      () =>\r\n        subset(Object.fromEntries(searchParams), stateKeys) as {\r\n          [key in K]: string;\r\n        },\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      [searchParams]\r\n    ),\r\n    (params: Partial<{ [key in K]: unknown }>) => {\r\n      setUrlParams(params);\r\n    },\r\n  ] as const;\r\n};\r\n\r\nexport const useSetUrlParams = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  return (params: { [key in string]: unknown }) => {\r\n    const o = cleanObject({\r\n      ...Object.fromEntries(searchParams),\r\n      ...params,\r\n    }) as URLSearchParamsInit;\r\n    return setSearchParams(o);\r\n  };\r\n};\r\n\r\nexport const useRouteType = () => {\r\n  const units = useLocation().pathname.split(\"/\");\r\n  return units;\r\n};","import { useMemo } from \"react\";\r\nimport { useProject } from \"utils/project\";\r\nimport { useUrlParams, useSetUrlParams } from \"utils/url\";\r\nexport const useProjectsSearchParams = () => {\r\n  const [param, setParam] = useUrlParams([\"name\", \"personId\"]);\r\n  return [\r\n    useMemo(\r\n      () => ({\r\n        ...param,\r\n        personId: Number(param.personId) || undefined,\r\n      }),\r\n      [param]\r\n    ),\r\n    setParam,\r\n  ] as const;\r\n};\r\n\r\nexport const useProjectsQueryKey = () => {\r\n  const [params] = useProjectsSearchParams();\r\n  return [\"projects\", params];\r\n};\r\n\r\nexport const useProjectModal = () => {\r\n  const [{ projectCreate }, setProjectCreate] = useUrlParams([\"projectCreate\"]);\r\n  const [{ editingProjectId }, setEditingProjectId] = useUrlParams([\r\n    \"editingProjectId\",\r\n  ]);\r\n  const setUrlParams = useSetUrlParams()\r\n  const {data:editingProject,isLoading} = useProject(Number(editingProjectId))\r\n  const open = () => {\r\n    setProjectCreate({projectCreate: true})\r\n  }\r\n\r\n  const close = () => {\r\n    setUrlParams({projectCreate:'',editingProjectId:''})\r\n  }\r\n\r\n  const startEdit = (id: number) => {\r\n    setEditingProjectId({editingProjectId:id})\r\n  }\r\n\r\n  return {\r\n    projectModalOpen: projectCreate==='true' || Boolean(editingProjectId),\r\n    editingProject,\r\n    isLoading,\r\n    open,\r\n    close,\r\n    startEdit\r\n  };\r\n};","import React, { useContext } from \"react\";\r\nimport { User } from \"../../types/User\";\r\nimport { Button, Dropdown, Table, Menu, Tag, Progress } from \"antd\";\r\nimport { ColumnsType, TableProps } from \"antd/lib/table\";\r\nimport dayjs from \"dayjs\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useProjectModal, useProjectsQueryKey } from \"./utils\";\r\nimport { useDeleteProject, useProjectTypes } from \"utils/project\";\r\nimport { Project } from \"types/project\";\r\nimport styled from \"@emotion/styled\";\r\nimport {ProjectListContext} from './index'\r\n\r\ninterface ListProps extends TableProps<Project> {\r\n  users: User[];\r\n}\r\n\r\nexport const List = ({ users ,...props }: ListProps) => {\r\n  const { data: types } = useProjectTypes();\r\n  const columns: ColumnsType<Project> = [\r\n    {\r\n      width: 80,\r\n      render(value, project) {\r\n        return (\r\n          <Tag color={\"green\"}>\r\n            {types?.find((item) => item.id === project.type)?.name}\r\n          </Tag>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      title: \"名称\",\r\n      sorter(a, b) {\r\n        return a.name.localeCompare(b.name);\r\n      },\r\n      render(value, project) {\r\n        return (\r\n          <ProjectNameColumn>\r\n            <Link to={String(project.id)} style={{ color: \"#606266\" }}>\r\n              {project.name}\r\n            </Link>\r\n            <span>\r\n              项目负责人：\r\n              {users.find((user) => user.id === project.personId)?.name ||\r\n                \"未知\"}\r\n            </span>\r\n          </ProjectNameColumn>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      width: 250,\r\n      render(value, project) {\r\n        return (\r\n          <div>\r\n            <span style={{ color: \"rgb(96, 98, 102)\", fontSize: \"1.2rem\" }}>\r\n              已完成1134条 / 共1134条\r\n            </span>\r\n            <Progress percent={90} showInfo={false}></Progress>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      width: 150,\r\n      title: \"部门\",\r\n      dataIndex: \"organization\",\r\n    },\r\n    {\r\n      width: 170,\r\n      title: \"创建时间\",\r\n      render(value, project) {\r\n        return (\r\n          <span>\r\n            {project.created\r\n              ? dayjs(project.created).format(\"YYYY-MM-DD hh:mm\")\r\n              : \"无\"}\r\n          </span>\r\n        );\r\n      },\r\n    },\r\n    {\r\n      width: 100,\r\n      render(value, project, index) {\r\n        return <More project={project} index={index}/>;\r\n      },\r\n    },\r\n  ];\r\n  return (\r\n    <Table\r\n      pagination={false}\r\n      columns={columns}\r\n      rowKey={(column) => column.id}\r\n      showHeader={false}\r\n      {...props}\r\n    ></Table>\r\n  );\r\n};\r\n\r\nconst More = ({\r\n  project,\r\n  index\r\n}: {\r\n  project: Project;\r\n  index:number\r\n}) => {\r\n  const { startEdit } = useProjectModal();\r\n  const { mutate: deleteProject } = useDeleteProject(useProjectsQueryKey());\r\n  const editProject = (id: number) => () => {\r\n    startEdit(id);\r\n  };\r\n  const confirmDeleteProject = (id: number) => () => {\r\n    deleteProject({ id });\r\n  };\r\n  const context = useContext(ProjectListContext)\r\n  const toTop = context ? context.toTop : (index:number) => {}\r\n  const overlay = (\r\n    <Menu>\r\n      <Menu.Item\r\n        key={\"top\"}\r\n        onClick={() => {toTop(index)}}\r\n      >\r\n        置顶\r\n      </Menu.Item>\r\n      <Menu.Item onClick={editProject(project.id)} key={\"edit\"}>\r\n        编辑\r\n      </Menu.Item>\r\n      <Menu.Item onClick={confirmDeleteProject(project.id)} key={\"delete\"}>\r\n        删除\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown overlay={overlay}>\r\n      <Button type={\"link\"}>...</Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nconst ProjectNameColumn = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  & > span {\r\n    margin-top: 1rem;\r\n    color: #909399;\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { SearchPanel } from \"./search-panal\";\r\nimport { List } from \"./list\";\r\nimport { useMount, useDebounce } from \"utils/index\";\r\nimport { useHttp } from \"utils/http\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Row } from \"components/lib\";\r\nimport { Button } from \"antd\";\r\nimport { useProjects } from \"utils/project\";\r\nimport { useProjectModal, useProjectsSearchParams } from \"./utils\";\r\n\r\nexport const ProjectListContext = React.createContext<undefined | {toTop:(index:number) => void}>(undefined)\r\nexport const ProjectListScreen = () => {\r\n  const [param, setParam] = useProjectsSearchParams();\r\n  const { open } = useProjectModal();\r\n  const [users, setUsers] = useState([]);\r\n  const client = useHttp();\r\n  const { isLoading, data: list, setData } = useProjects(useDebounce(param, 200));\r\n\r\n  const toTop = (index:number) => {\r\n    if(!list) return\r\n    const cloneList = [...list]\r\n    const top = cloneList[index]\r\n    for (let i = index; i > 0; i--) {\r\n      cloneList[i] = cloneList[i-1];\r\n    }\r\n    cloneList[0] = top\r\n    setData(cloneList)\r\n  }\r\n  // const {run,isLoading,data:list} = useAsync<Project[]>()\r\n  useMount(() => {\r\n    client(\"/users\").then(setUsers);\r\n    client(\"https://my-json-server.typicode.com/mengdongl/yixiao/users\").then(\r\n      (res) => {\r\n        console.log(res);\r\n        client(\"https://my-json-server.typicode.com/mengdongl/yixiao/users\", {\r\n          method: \"POST\",\r\n          data: { name: \"阿湘\" },\r\n        });\r\n      }\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Container>\r\n      <ProjectListContext.Provider value={{toTop}}>\r\n      <TableContainer>\r\n        <TableHeader>\r\n          <Row between={true} >\r\n            <h1>项目列表</h1>\r\n            <SearchPanel\r\n              param={param}\r\n              setParam={setParam}\r\n              users={users}\r\n            ></SearchPanel>\r\n            <Button onClick={() => open()}>创建项目</Button>\r\n          </Row>\r\n        </TableHeader>\r\n        <List loading={isLoading} dataSource={list || []} users={users}></List>\r\n      </TableContainer>\r\n      </ProjectListContext.Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nProjectListScreen.whyDidYouRender = false;\r\n\r\nconst Container = styled.div`\r\n  padding: 3.2rem;\r\n  background-color: #f0f2f5;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  width: 70%;\r\n  background-color: white;\r\n  border: 1px solid #dcdfe6;\r\n  -webkit-box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%), 0 0 6px 0 rgb(0 0 0 / 4%);\r\n  box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%), 0 0 6px 0 rgb(0 0 0 / 4%);\r\n`;\r\n\r\nconst TableHeader = styled.div`\r\n  padding: 1.2rem;\r\n  background-color: #f5f7fa;\r\n`;\r\n","import { useHttp } from \"./http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { cleanObject } from \"utils\";\r\nimport { Task } from \"types/task\";\r\nimport { useAddConfig, useEditConfig } from \"./use-optimistic-options\";\r\nexport const useTasks = (param?: Partial<Task>) => {\r\n  const client = useHttp();\r\n  return useQuery<Task[]>([\"tasks\", cleanObject(param)], ({queryKey}) =>\r\n    client(\"/tasks\", { data: queryKey[1] as object })\r\n  );\r\n};\r\n\r\nexport const useTask = (id?: number) => {\r\n  const client = useHttp();\r\n  return useQuery<Task>([\"tasks\", { id }], () => client(`/tasks/${id}`), {\r\n    enabled: Boolean(id),\r\n  })\r\n};\r\n\r\nexport const useAddTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`/tasks`, {\r\n        data: params,\r\n        method: \"POST\",\r\n      }),\r\n    useAddConfig(queryKey)\r\n  )\r\n};\r\n\r\nexport const useEditTask = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Task>) =>\r\n      client(`/tasks/${params.id}`, {\r\n        method: \"PATCH\",\r\n        data: params,\r\n      }),\r\n    useEditConfig(queryKey)\r\n  )\r\n};\r\n","import { useUrlParams } from \"utils/url\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useProject } from \"utils/project\";\r\nimport { useDebounce } from \"utils\";\r\nimport { useTask } from \"utils/task\";\r\nexport const useProjectIdInUrl = () => {\r\n  const { pathname } = useLocation();\r\n  const id = pathname.match(/projects\\/(\\d+)/)?.[1];\r\n  return typeof id === 'string' ? Number(id) : undefined;\r\n};\r\n\r\nexport const useProjectInUrl = () =>  useProject(useProjectIdInUrl());\r\n\r\nexport const useKanbanSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\nexport const useKanbansQueryKey = () => [\"kanbans\", useKanbanSearchParams()];\r\n\r\nexport const useTaskSearchParams = () => {\r\n  const [param] = useUrlParams([\"name\", \"typeId\", \"processorId\", \"tagId\",\"taskFrom\", \"status\", \"typeId\"]);\r\n  const projectId = useProjectIdInUrl();\r\n  const debouncedName = useDebounce(param.name, 200);\r\n  return useMemo(\r\n    () => ({\r\n      projectId,\r\n      typeId: Number(param.typeId) || undefined,\r\n      processorId: Number(param.processorId) || undefined,\r\n      tagId: Number(param.tagId) || undefined,\r\n      name: debouncedName,\r\n      taskFrom: param.taskFrom,\r\n      status: Number(param.status) || undefined,\r\n    }),\r\n    [projectId, param, debouncedName]\r\n  );\r\n};\r\n\r\nexport const useTaskQueryKey = () => [\"tasks\", useTaskSearchParams()];\r\n\r\nexport const useTaskModal = () => {\r\n  const [{ editingTaskId }, setEditingTaskId] = useUrlParams([\"editingTaskId\"]);\r\n  const {\r\n    data: editingTask,\r\n    isLoading,\r\n    error,\r\n  } = useTask(Number(editingTaskId));\r\n  const startEdit = useCallback(\r\n    (id: number) => setEditingTaskId({ editingTaskId: id }),\r\n    [setEditingTaskId]\r\n  );\r\n  const close = useCallback(\r\n    () => setEditingTaskId({ editingTaskId: \"\" }),\r\n    [setEditingTaskId]\r\n  );\r\n  return {\r\n    editingTaskId,\r\n    editingTask,\r\n    error,\r\n    isLoading,\r\n    startEdit,\r\n    close,\r\n  };\r\n};\r\n","export default __webpack_public_path__ + \"static/media/task.8118694e.svg\";","export default __webpack_public_path__ + \"static/media/bug.bc7dca9d.svg\";","import { useHttp } from \"utils/http\";\r\nimport { useQuery } from \"react-query\";\r\nimport { TaskType } from \"types/task-type\";\r\n\r\nexport const useTaskTypes = () => {\r\n  const client = useHttp();\r\n  return useQuery<TaskType[]>([\"taskTypes\"], () => client(\"/taskTypes\"));\r\n};\r\n","import { Card, Input } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useAddTask } from \"utils/task\";\r\nimport { useProjectInUrl, useTaskQueryKey } from \"./utils\";\r\n\r\nexport const CreateTask = ({ kanbanId,handleRefresh }: { kanbanId: number, handleRefresh: ()=>void }) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [inputMode, setInputMode] = useState(false);\r\n  const { mutate: addTask } = useAddTask(useTaskQueryKey());\r\n  const {data:currentProject} = useProjectInUrl()\r\n  const toggle = () => {\r\n    setInputMode((state) => !state);\r\n  };\r\n  const submit = async () => {\r\n    await addTask({ name, projectId:currentProject?.id, kanbanId , status:1 , projectName:currentProject?.name});\r\n    handleRefresh()\r\n    setInputMode(false);\r\n    setName(\"\");\r\n  };\r\n  useEffect(() => {\r\n    setName(\"\");\r\n  }, [inputMode]);\r\n  if (!inputMode) return <div onClick={toggle}>+创建任务</div>;\r\n  return (\r\n    <Card>\r\n      <Input\r\n        onBlur={toggle}\r\n        placeholder={\"需要做些什么\"}\r\n        autoFocus={true}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      ></Input>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Mark = ({ keyword, name }: { keyword?: string; name: string }) => {\r\n  if (!keyword) {\r\n    return <>{name}</>;\r\n  }\r\n  const arr = name.split(keyword);\r\n  return (\r\n    <>\r\n      {arr.map((str, index) => (\r\n        <span key={index}>\r\n          {str}\r\n          {index === arr.length - 1 ? null : (\r\n            <span style={{ color: \"#257AFD\" }}>{keyword}</span>\r\n          )}\r\n        </span>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Card, Dropdown, Button, Menu, Modal } from \"antd\";\r\nimport { Row } from \"components/lib\";\r\nimport React from \"react\";\r\nimport { Kanban } from \"types/kanban\";\r\nimport { Task } from \"types/task\";\r\nimport { useTasks } from \"utils/task\";\r\nimport { useKanbansQueryKey, useTaskModal, useTaskSearchParams } from \"./utils\";\r\nimport taskIcon from \"assets/task.svg\";\r\nimport bugIcon from \"assets/bug.svg\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { useDeleteKanban } from \"utils/kanban\";\r\nimport { CreateTask } from \"./create-task\";\r\nimport { useUrlParams } from \"utils/url\";\r\nimport { Mark } from \"components/mark\";\r\n\r\nexport const KanbanColumn = ({ kanban, ...props }: { kanban: Kanban }) => {\r\n  const taskSearchParams = useTaskSearchParams();\r\n  const { data: allTasks } = useTasks(taskSearchParams);\r\n  const tasks = allTasks?.filter((task) => task.kanbanId === kanban.id) || [];\r\n  const handleRefresh = () => {\r\n    // refresh(taskSearchParams);\r\n  };\r\n  return (\r\n    <Container {...props}>\r\n      <Row between={true}>\r\n        <h3>{kanban.name}</h3>\r\n        <More kanban={kanban}></More>\r\n      </Row>\r\n      <TasksContainer>\r\n        {tasks?.map((task) => (\r\n          <div key={task.id}>\r\n            <TaskCard task={task} key={task.id}></TaskCard>\r\n          </div>\r\n        ))}\r\n        <CreateTask\r\n          kanbanId={kanban.id}\r\n          handleRefresh={handleRefresh}\r\n        ></CreateTask>\r\n      </TasksContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst TaskTypeIcon = ({ id }: { id: number }) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  const name = taskTypes?.find((taskType) => taskType.id === id)?.name;\r\n  if (!name) {\r\n    return null;\r\n  }\r\n  return <img alt={\"task-icon\"} src={name === \"task\" ? taskIcon : bugIcon} />;\r\n};\r\n\r\nconst TaskCard = ({ task }: { task: Task }) => {\r\n  const [{ name: keyword }] = useUrlParams([\"name\"]);\r\n  const { startEdit } = useTaskModal();\r\n  return (\r\n    <Card\r\n      onClick={() => startEdit(task.id)}\r\n      style={{ marginBottom: \"0.5rem\", cursor: \"pointer\" }}\r\n      key={task.id}\r\n    >\r\n      <p>\r\n        <Mark keyword={keyword} name={task.name} />\r\n      </p>\r\n      <TaskTypeIcon id={task.typeId} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst More = ({ kanban }: { kanban: Kanban }) => {\r\n  const { mutate } = useDeleteKanban(useKanbansQueryKey());\r\n  const startDelete = () => {\r\n    Modal.confirm({\r\n      okText: \"确定\",\r\n      cancelText: \"取消\",\r\n      title: \"确定删除看板吗\",\r\n      onOk() {\r\n        return mutate({ id: kanban.id });\r\n      },\r\n    });\r\n  };\r\n  const overlay = (\r\n    <Menu>\r\n      <Menu.Item>\r\n        <Button type={\"link\"} onClick={startDelete}>\r\n          删除\r\n        </Button>\r\n      </Menu.Item>\r\n    </Menu>\r\n  );\r\n  return (\r\n    <Dropdown overlay={overlay}>\r\n      <Button type={\"link\"}>...</Button>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport const Container = styled.div`\r\n  min-width: 27rem;\r\n  border-radius: 6px;\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.7rem 0.7rem 1rem;\r\n  margin-right: 1.5rem;\r\n`;\r\nconst TasksContainer = styled.div`\r\n  overflow: scroll;\r\n  flex: 1;\r\n\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n","import { useHttp } from \"./http\";\r\nimport { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { cleanObject } from \"utils\";\r\nimport { Kanban } from \"types/kanban\";\r\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\r\nexport const useKanbans = (param?: Partial<Kanban>) => {\r\n  const client = useHttp();\r\n  return useQuery<Kanban[]>([\"kanbans\", cleanObject(param)], () =>\r\n    client(\"/kanbans\", { data: param })\r\n  );\r\n};\r\n\r\nexport const useAddKanban = (queryKey:QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation(\r\n      (params: Partial<Kanban>) =>\r\n        client(`/kanbans`, {\r\n          data: params,\r\n          method: \"POST\",\r\n        }),\r\n      useAddConfig(queryKey)\r\n    );\r\n}\r\n\r\nexport const useDeleteKanban = (queryKey:QueryKey) => {\r\n    const client = useHttp()\r\n    return useMutation(\r\n      ({id}: {id:number}) =>\r\n        client(`/kanbans/${id}`, {\r\n          method: \"DELETE\"\r\n        }),\r\n      useDeleteConfig(queryKey)\r\n    );\r\n  }","import { Input } from \"antd\"\r\nimport { useState } from \"react\"\r\nimport { useAddKanban } from \"utils/kanban\"\r\nimport { Container } from \"./kanban-column\"\r\nimport { useKanbansQueryKey, useProjectIdInUrl } from \"./utils\"\r\n\r\nexport const CreateKanban = () => {\r\n    const [name,setName] = useState('')\r\n    const {mutateAsync:addKanban} = useAddKanban(useKanbansQueryKey())\r\n    const projectId = useProjectIdInUrl()\r\n    const submit = async () => {\r\n        await addKanban({projectId,name})\r\n        setName('')\r\n    }\r\n    return <Container>\r\n        <Input\r\n        size={\"large\"}\r\n        placeholder={\"新建看板名称\"}\r\n        onPressEnter={submit}\r\n        value={name}\r\n        onChange={(evt) => setName(evt.target.value)}\r\n      />\r\n    </Container>\r\n}","import React from \"react\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { IdSelect } from \"./id-select\";\r\nexport const TaskTypeSelect = (\r\n  props: React.ComponentProps<typeof IdSelect>\r\n) => {\r\n  const { data: taskTypes } = useTaskTypes();\r\n  return <IdSelect options={taskTypes} {...props}></IdSelect>;\r\n};\r\n","import { useQuery } from \"react-query\";\r\nimport { User } from \"types/User\";\r\nimport { useHttp } from \"./http\";\r\nexport const useUser = (param?: Partial<User>) => {\r\n  const client = useHttp();\r\n  return useQuery<User[]>([\"users\", param], () => client(\"/users\", { data: param }));\r\n};\r\n","import React from \"react\";\r\nimport { useUser } from \"utils/user\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const UserSelect = (props:React.ComponentProps<typeof IdSelect>) => {\r\n  const {data:users} = useUser()\r\n  return <IdSelect options={users} {...props}></IdSelect>;\r\n};\r\n","import { Button, Input } from \"antd\";\r\nimport { Row } from \"components/lib\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport React from \"react\";\r\nimport { useSetUrlParams, useUrlParams } from \"utils/url\";\r\nimport { useTaskSearchParams } from \"./utils\";\r\n\r\nexport const SearchPanel = () => {\r\n  const param = useTaskSearchParams();\r\n  const [{name:taskName}] = useUrlParams(['name'])\r\n  const setUrlParam = useSetUrlParams();\r\n  const reset = () => {\r\n    setUrlParam({\r\n      typeId: undefined,\r\n      processorId: undefined,\r\n      tagId: undefined,\r\n      name: undefined,\r\n    });\r\n  };\r\n  return (\r\n    <Row marginBottom={4} marginRight={true}>\r\n      <Input\r\n        style={{ width: \"20rem\" }}\r\n        placeholder={\"任务名\"}\r\n        value={taskName}\r\n        onChange={evt => setUrlParam({name:evt.target.value})}\r\n      />\r\n      <UserSelect\r\n        defaultOptionName={\"经办人\"}\r\n        value={param.processorId}\r\n        onChange={value => setUrlParam({processorId:value})}\r\n      />\r\n      <TaskTypeSelect\r\n        defaultOptionName={\"类型\"}\r\n        value={param.typeId}\r\n        onChange={value => setUrlParam({typeId:value})}\r\n      />\r\n      <Button onClick={reset}>清空</Button>\r\n    </Row>\r\n  );\r\n};\r\n","import { QueryKey, useMutation, useQuery } from \"react-query\";\r\nimport { Epic } from \"types/epic\";\r\nimport { cleanObject } from \"utils\";\r\nimport { useHttp } from \"./http\";\r\nimport { useAddConfig, useDeleteConfig } from \"./use-optimistic-options\";\r\n\r\nexport const useEpics = (param?: Partial<Epic>) => {\r\n  const client = useHttp();\r\n  return useQuery<Epic[]>([\"epics\", cleanObject(param)], () =>\r\n    client(\"/epics\", { data: param })\r\n  );\r\n};\r\n\r\nexport const useAddEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    (params: Partial<Epic>) =>\r\n      client(\"/epics\", { data: params, method: \"POST\" }),\r\n    useAddConfig(queryKey)\r\n  );\r\n};\r\n\r\nexport const useDeleteEpic = (queryKey: QueryKey) => {\r\n  const client = useHttp();\r\n  return useMutation(\r\n    ({ id }: { id: number }) => client(`/epics/${id}`, { method: \"DELETE\" }),\r\n    useDeleteConfig(queryKey)\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useEpics } from \"utils/epic\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const EpicSelect = (props: React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: epics } = useEpics();\r\n  return <IdSelect options={epics} {...props} />;\r\n};\r\n","import { Modal, Form, Input, Spin } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { EpicSelect } from \"components/epic-select\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport { TaskTypeSelect } from \"components/task-type-select\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useEditTask } from \"utils/task\";\r\nimport { useProjectInUrl, useTaskModal, useTaskQueryKey } from \"./utils\";\r\n\r\nconst layout = {\r\n  labelCol: { span: 8 },\r\n  wrapperCol: { span: 16 },\r\n};\r\nexport const TaskModal = () => {\r\n  const { editingTaskId, error, editingTask, isLoading, close } = useTaskModal();\r\n  const { mutateAsync: editTask, isLoading: editLoading } = useEditTask(useTaskQueryKey());\r\n  const [form] = useForm();\r\n  const {data:currentProject} = useProjectInUrl()\r\n  const onCancel = () => {\r\n    close();\r\n    form.resetFields();\r\n  };\r\n  const onOk = async () => {\r\n    await editTask({\r\n      ...editingTask,\r\n      ...form.getFieldsValue(),\r\n      status: editingTask?.status ? editingTask?.status : 1,\r\n      projectName: editingTask?.projectName ? editingTask?.projectName : (currentProject ? currentProject.name : '')\r\n    });\r\n    close();\r\n    form.resetFields();\r\n  };\r\n\r\n  useEffect(() => {\r\n    form.setFieldsValue(editingTask);\r\n  }, [form, editingTask]);\r\n  return (\r\n    <Modal\r\n      forceRender={true}\r\n      visible={!!editingTaskId}\r\n      onCancel={onCancel}\r\n      onOk={onOk}\r\n      okText={\"确认\"}\r\n      cancelText={\"取消\"}\r\n      confirmLoading={editLoading}\r\n      title={\"编辑任务\"}\r\n    >\r\n      <ErrorBox error={error as Error}></ErrorBox>\r\n      {isLoading ? (\r\n        <Spin size={\"large\"}></Spin>\r\n      ) : (\r\n        <Form {...layout} form={form} initialValues={editingTask}>\r\n          <Form.Item\r\n            label={\"任务名\"}\r\n            name={\"name\"}\r\n            rules={[{ required: true, message: \"请输入任务名\" }]}\r\n          >\r\n            <Input />\r\n          </Form.Item>\r\n          <Form.Item label={\"任务组\"} name={\"epicId\"}>\r\n            <EpicSelect defaultOptionName={\"任务组\"} />\r\n          </Form.Item>\r\n          <Form.Item label={\"经办人\"} name={\"processorId\"}>\r\n            <UserSelect defaultOptionName={\"经办人\"} />\r\n          </Form.Item>\r\n          <Form.Item label={\"类型\"} name={\"typeId\"}>\r\n            <TaskTypeSelect />\r\n          </Form.Item>\r\n        </Form>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Spin } from \"antd\";\r\nimport { ScreenContainer } from \"components/lib\";\r\nimport React from \"react\";\r\nimport { useKanbans } from \"utils/kanban\";\r\nimport { CreateKanban } from \"./create-kanban\";\r\nimport { KanbanColumn } from \"./kanban-column\";\r\nimport { SearchPanel } from \"./search-panel\";\r\nimport { TaskModal } from \"./task-modal\";\r\nimport { useKanbanSearchParams, useProjectInUrl } from \"./utils\";\r\n\r\nexport const KanbanScreen = () => {\r\n  const { data: currentProject } = useProjectInUrl();\r\n  const { data: kanbans, isLoading: kanbanIsLoading } = useKanbans(\r\n    useKanbanSearchParams()\r\n  );\r\n  const isLoading = kanbanIsLoading;\r\n  return (\r\n    <ScreenContainer>\r\n      <h1>{currentProject?.name}看板</h1>\r\n      <SearchPanel/>\r\n      {isLoading ? (\r\n        <Spin size={\"large\"}></Spin>\r\n      ) : (\r\n        <ColumnsContainer>\r\n        {kanbans?.map(kanban => (<KanbanColumn kanban={kanban} key={kanban.id}></KanbanColumn>))}\r\n        <CreateKanban/>\r\n        </ColumnsContainer>\r\n      )}\r\n      {currentProject ? <TaskModal/> : null}\r\n    </ScreenContainer>\r\n  );\r\n};\r\n\r\nexport const ColumnsContainer = styled.div`\r\n  display: flex;\r\n  overflow-x: scroll;\r\n  flex: 1;\r\n`;\r\n","import { useProjectIdInUrl } from \"screens/kanban/utils\";\r\n\r\nexport const useEpicSearchParams = () => ({ projectId: useProjectIdInUrl() });\r\n\r\nexport const useEpicsQueryKey = () => [\"epics\", useEpicSearchParams()];","import styled from \"@emotion/styled\";\r\nimport { Button, Drawer, DrawerProps, Form, Input, Spin } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useProjectIdInUrl } from \"screens/kanban/utils\";\r\nimport { useAddEpic } from \"utils/epic\";\r\nimport { useEpicsQueryKey } from \"./utils\";\r\n\r\nexport const CreateEpic = (\r\n  props: Pick<DrawerProps, \"visible\"> & { onClose: () => void }\r\n) => {\r\n  const projectId = useProjectIdInUrl();\r\n  const { isLoading, mutate: addEpic, error } = useAddEpic(useEpicsQueryKey());\r\n  const [form] = useForm();\r\n  const onFinish = async (values: any) => {\r\n    await addEpic({ ...values, projectId });\r\n    props.onClose();\r\n  };\r\n  useEffect(() => {\r\n    form.resetFields();\r\n  }, [form, props.visible]);\r\n  return (\r\n    <Drawer\r\n      visible={props.visible}\r\n      onClose={props.onClose}\r\n      forceRender={true}\r\n      destroyOnClose={true}\r\n      width={\"100%\"}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={\"large\"} />\r\n        ) : (\r\n          <>\r\n            <h1>创建任务组</h1>\r\n            <ErrorBox error={error} />\r\n            <Form\r\n              form={form}\r\n              layout={\"vertical\"}\r\n              style={{ width: \"40rem\" }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={\"名称\"}\r\n                name={\"name\"}\r\n                rules={[{ required: true, message: \"请输入任务组名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入任务组名称\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  loading={isLoading}\r\n                  type={\"primary\"}\r\n                  htmlType={\"submit\"}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { Button, List, Modal } from \"antd\";\r\nimport { Row, ScreenContainer } from \"components/lib\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { useMemo, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useProjectInUrl } from \"screens/kanban/utils\";\r\nimport { Epic } from \"types/epic\";\r\nimport { useDeleteEpic, useEpics } from \"utils/epic\";\r\nimport { useTasks } from \"utils/task\";\r\nimport { CreateEpic } from \"./create-epic\";\r\nimport { useEpicSearchParams, useEpicsQueryKey } from \"./utils\";\r\n\r\nexport const EpicScreen = () => {\r\n  const { data: currentProject } = useProjectInUrl();\r\n  const { data: epics } = useEpics(useEpicSearchParams());\r\n  const { data: tasks } = useTasks(useMemo(() =>({ projectId: currentProject?.id }),[currentProject]));\r\n  const { mutate: deleteEpic } = useDeleteEpic(useEpicsQueryKey());\r\n  const [epicCreateOpen, setEpicCreateOpen] = useState(false);\r\n  const confirmDeleteEpic = (epic: Epic) => {\r\n    Modal.confirm({\r\n      title: `确定删除项目组：${epic.name}`,\r\n      content: \"点击确定删除\",\r\n      okText: \"确定\",\r\n      onOk() {\r\n        deleteEpic({ id: epic.id });\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <ScreenContainer>\r\n      <Row between={true}>\r\n        <h1>{currentProject?.name}任务组</h1>\r\n        <Button onClick={() => setEpicCreateOpen(true)}>创建任务组</Button>\r\n      </Row>\r\n      <List\r\n        style={{ overflow: \"scroll\" }}\r\n        dataSource={epics}\r\n        itemLayout={\"vertical\"}\r\n        renderItem={(epic) => (\r\n          <List.Item>\r\n            <List.Item.Meta\r\n              title={\r\n                <Row between={true}>\r\n                  <span>{epic.name}</span>\r\n                  <Button onClick={() => confirmDeleteEpic(epic)} type={\"link\"}>\r\n                    删除\r\n                  </Button>\r\n                </Row>\r\n              }\r\n              description={\r\n                <div>\r\n                  <div>开始时间：{dayjs(epic.start).format(\"YYYY-MM-DD\")}</div>\r\n                  <div>结束时间：{dayjs(epic.end).format(\"YYYY-MM-DD\")}</div>\r\n                </div>\r\n              }\r\n            />\r\n            <div>\r\n              {tasks\r\n                ?.filter((task) => task.epicId === epic.id)\r\n                .map((task) => (\r\n                  <Link\r\n                    to={`/projects/${currentProject?.id}/kanban?editingTaskId=${task.id}`}\r\n                    key={task.id}\r\n                  >\r\n                    {task.name}\r\n                  </Link>\r\n                ))}\r\n            </div>\r\n          </List.Item>\r\n        )}\r\n      ></List>\r\n      <CreateEpic\r\n        visible={epicCreateOpen}\r\n        onClose={() => setEpicCreateOpen(false)}\r\n      />\r\n    </ScreenContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, Navigate, Route, Routes } from \"react-router-dom\";\r\nimport { KanbanScreen } from \"screens/kanban\";\r\nimport { EpicScreen } from \"screens/epic\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Menu } from \"antd\";\r\nimport { useRouteType } from 'utils/url'\r\n\r\n\r\nexport const ProjectScreen = () => {\r\n    const routeType = useRouteType();\r\n  return (\r\n    <Container>\r\n      <Aside>\r\n          <Menu mode={\"inline\"} selectedKeys={routeType}>\r\n              <Menu.Item key={'kanban'}>\r\n              <Link to={\"kanban\"}>看板</Link>\r\n              </Menu.Item>\r\n              <Menu.Item key={'epic'}>\r\n              <Link to={\"epic\"}>任务组</Link>\r\n              </Menu.Item>\r\n          </Menu>\r\n      </Aside>\r\n      <Main>\r\n        <Routes>\r\n          <Route path={\"kanban\"} element={<KanbanScreen />}></Route>\r\n          <Route path={\"epic\"} element={<EpicScreen />}></Route>\r\n          <Navigate\r\n            to={window.location.pathname + \"/kanban\"}\r\n            replace={true}\r\n          ></Navigate>\r\n        </Routes>\r\n      </Main>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Aside = styled.aside`\r\n  background-color: rgb(244, 245, 247);\r\n  display: flex;\r\n`;\r\n\r\nconst Main = styled.div`\r\n  box-shadow: -5px 0 5px -5px rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 16rem 1fr;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n","import React from \"react\";\r\nimport { useProjectTypes } from \"utils/project\";\r\nimport { IdSelect } from \"./id-select\";\r\n\r\nexport const ProjectTypeSelect = (props:React.ComponentProps<typeof IdSelect>) => {\r\n  const { data: types } = useProjectTypes();\r\n  if (types) {\r\n    return <IdSelect options={types} {...props}></IdSelect>;\r\n  } else {\r\n    return null\r\n  }\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Drawer, Spin, Form, Input, Button } from \"antd\";\r\nimport { useForm } from \"antd/lib/form/Form\";\r\nimport { ErrorBox } from \"components/lib\";\r\nimport { UserSelect } from \"components/user-select\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useAddProject, useEditProject } from \"utils/project\";\r\nimport { Project } from \"types/project\";\r\nimport { useProjectModal, useProjectsQueryKey } from \"./utils\";\r\nimport { ProjectTypeSelect } from \"components/project-type-select\";\r\n\r\nexport const ProjectModal = () => {\r\n  const {\r\n    projectModalOpen,\r\n    editingProject,\r\n    isLoading,\r\n    close,\r\n  } = useProjectModal();\r\n  const useMutateProject = editingProject ? useEditProject : useAddProject\r\n  const {mutateAsync,isLoading:mutateLoading} = useMutateProject(useProjectsQueryKey())\r\n  const [form] = useForm();\r\n  const title = editingProject ? \"编辑项目\" : \"新增项目\";\r\n  const onFinish = (values: Partial<Project>) => {\r\n    mutateAsync({...editingProject,...values}).then(() => {\r\n      onClose()\r\n    })\r\n  }\r\n  const onClose = () =>{\r\n    form.resetFields()\r\n    close();\r\n  }\r\n  useEffect(() => {\r\n    if(!editingProject) {\r\n      form.setFields([{name:'type',value:1}])\r\n    }\r\n  },[projectModalOpen,form,editingProject])\r\n  useEffect(()=>{\r\n    form.setFieldsValue(editingProject)\r\n  },[editingProject,form])\r\n  return (\r\n    <Drawer\r\n      width={\"100%\"}\r\n      forceRender={true}\r\n      visible={projectModalOpen}\r\n      onClose={onClose}\r\n    >\r\n      <Container>\r\n        {isLoading ? (\r\n          <Spin size={\"large\"} />\r\n        ) : (\r\n          <>\r\n            <h1>{title}</h1>\r\n            <ErrorBox error={undefined}></ErrorBox>\r\n            <Form\r\n              form={form}\r\n              layout={\"vertical\"}\r\n              style={{ width: \"40rem\" }}\r\n              onFinish={onFinish}\r\n            >\r\n              <Form.Item\r\n                label={\"名称\"}\r\n                name={\"name\"}\r\n                rules={[{ required: true, message: \"请输入项目名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入项目名称\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item\r\n                label={\"部门\"}\r\n                name={\"organization\"}\r\n                rules={[{ required: true, message: \"请输入部门名\" }]}\r\n              >\r\n                <Input placeholder={\"请输入部门名\"} />\r\n              </Form.Item>\r\n\r\n              <Form.Item label={\"负责人\"} name={\"personId\"}>\r\n                <UserSelect defaultOptionName={'负责人'}></UserSelect>\r\n              </Form.Item>\r\n\r\n              <Form.Item label={\"项目类型\"} name={\"type\"}>\r\n                <ProjectTypeSelect></ProjectTypeSelect>\r\n              </Form.Item>\r\n              <Form.Item style={{ textAlign: \"right\" }}>\r\n                <Button\r\n                  type={\"primary\"}\r\n                  htmlType={\"submit\"}\r\n                  loading={mutateLoading}\r\n                >\r\n                  提交\r\n                </Button>\r\n              </Form.Item>\r\n            </Form>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  height: 80vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n","import { Table, Tag } from \"antd\";\r\nimport { TagOutlined } from \"@ant-design/icons\";\r\nimport { useAuth } from \"context/auth-context\";\r\nimport React, { useContext } from \"react\";\r\nimport { useTasks } from \"utils/task\";\r\nimport { ColumnsType } from \"antd/lib/table\";\r\nimport { Task } from \"types/task\";\r\nimport { TaskType } from \"types/task-type\";\r\nimport { WorkListContext } from \".\";\r\nimport { useTaskModal, useTaskSearchParams } from \"screens/kanban/utils\";\r\n\r\nexport const List = ({\r\n  taskTypes,\r\n  ...props\r\n}: {\r\n  taskTypes: TaskType[];\r\n}) => {\r\n  const { user } = useAuth();\r\n//   const param = useWorksSearchParams()\r\n//   const paramMemo = useMemo(() => ({\r\n//     typeId: param.typeId ? param.typeId :taskTypes?.[0].id,\r\n//     taskFrom:param.taskFrom,\r\n//     status:param.status,\r\n//   }),[param])\r\n  const taskSearchParams = useTaskSearchParams()\r\n  taskSearchParams.typeId = taskSearchParams.typeId ? taskSearchParams.typeId :taskTypes?.[0].id\r\n  const { data: tasks, isLoading } = useTasks(taskSearchParams);\r\n  const { taskStatus: statusList } = useContext(WorkListContext);\r\n  const { startEdit } = useTaskModal();\r\n  const columns: ColumnsType<Task> = [\r\n    {\r\n      width: 40,\r\n      render: (value, task) => (\r\n        <Tag color={\"blue\"} icon={<TagOutlined />}>\r\n          {taskTypes.find((type) => type.id === task.typeId)?.name}\r\n        </Tag>\r\n      ),\r\n    },\r\n    {\r\n      width: 100,\r\n      render: (value, task) => (\r\n        <div\r\n          style={{ textAlign: \"center\", fontSize: \"1.4rem\", color: \"#606266\" }}\r\n        >\r\n          {statusList.find((status) => status.id === task.status)?.name}\r\n        </div>\r\n      ),\r\n    },\r\n    {\r\n      dataIndex: \"name\",\r\n      render: (value, task) => (\r\n        <div\r\n          style={{ fontSize: \"1.6rem\", color: \"#606266\" }}\r\n          onClick={() => startEdit(task.id)}\r\n        >\r\n          {value}\r\n        </div>\r\n      ),\r\n    },\r\n    { width: 80, render: () => <span>{user?.name}</span> },\r\n    { width: 80, render: (value, task) => <Tag>{task.projectName}</Tag> },\r\n    { width: 150, render: (value, task) => <span>{task.note}</span> },\r\n  ];\r\n  return (\r\n    <Table\r\n      {...props}\r\n      dataSource={tasks || []}\r\n      columns={columns}\r\n      rowKey={(column) => column.id}\r\n      showHeader={false}\r\n      loading={isLoading}\r\n    ></Table>\r\n  );\r\n};\r\n","import { useMemo } from \"react\";\r\nimport { useUrlParams } from \"utils/url\";\r\nexport const useWorksSearchParams = () => {\r\n  const [param] = useUrlParams([\"taskFrom\", \"status\", \"typeId\"]);\r\n  return useMemo(\r\n    () => ({\r\n      taskFrom: param.taskFrom,\r\n      typeId: Number(param.typeId) || undefined,\r\n      status: Number(param.status) || undefined,\r\n    }),\r\n    [param]\r\n  );\r\n};\r\n\r\nexport const useWorkQueryKey = () => [\"taska\", useWorksSearchParams()];\r\n","import React, { useContext } from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport { List } from \"./list\";\r\nimport { useWorksSearchParams } from \"./utils\";\r\nimport { IdSelect } from \"components/id-select\";\r\nimport { useTaskTypes } from \"utils/task-type\";\r\nimport { WorkListContext } from \".\";\r\nimport { useSetUrlParams } from \"utils/url\";\r\n\r\nexport const SearchPanel = () => {\r\n  const { typeId, status } = useWorksSearchParams();\r\n  const setParam = useSetUrlParams();\r\n  const { data: taskTypes } = useTaskTypes();\r\n  const handleChange = (activeKey: string) => {\r\n    setParam({ typeId: activeKey });\r\n  };\r\n\r\n  const { taskStatus: statusList } = useContext(WorkListContext);\r\n  const OperationsSlot = {\r\n    right: (\r\n      <IdSelect\r\n        options={statusList}\r\n        value={status}\r\n        placeholder={\"状态\"}\r\n        defaultOptionName={\"全部\"}\r\n        onChange={(value) => {\r\n          setParam({ status: value });\r\n        }}\r\n        style={{ width: \"100px\" }}\r\n      ></IdSelect>\r\n    ),\r\n  };\r\n  return (\r\n    <Tabs\r\n      type=\"card\"\r\n      activeKey={typeId ? String(typeId) : String(taskTypes?.[0].id)}\r\n      defaultValue={taskTypes?.[0].id}\r\n      onChange={handleChange}\r\n      tabBarExtraContent={OperationsSlot}\r\n    >\r\n      {taskTypes?.map((type) => (\r\n        <Tabs.TabPane tab={type.name} key={type.id}>\r\n          <List\r\n            taskTypes={taskTypes}\r\n          ></List>\r\n        </Tabs.TabPane>\r\n      ))}\r\n    </Tabs>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Tabs, Button } from \"antd\";\r\nimport { SearchPanel } from \"./search-panal\";\r\nimport { useNavigate } from \"react-router\";\r\nimport styled from \"@emotion/styled\";\r\nimport { useWorksSearchParams } from \"./utils\";\r\nimport { useSetUrlParams } from \"utils/url\";\r\n\r\nexport const WorkList = () => {\r\n  const navigate = useNavigate();\r\n  const handleNav = (route: string) => {\r\n    navigate(route);\r\n  };\r\n  const {taskFrom} = useWorksSearchParams()\r\n  const setParam  = useSetUrlParams()\r\n  const handleChange = (activeKey:string) =>{\r\n    setParam({taskFrom:activeKey})\r\n  }\r\n  const OperationsSlot = {\r\n    right: (\r\n      <Button\r\n        type=\"link\"\r\n        onClick={() => {\r\n          handleNav(\"/projects\");\r\n        }}\r\n      >\r\n        新增任务\r\n      </Button>\r\n    ),\r\n  };\r\n  return (\r\n    <Container>\r\n      <Tabs type=\"card\" tabBarExtraContent={OperationsSlot} activeKey={taskFrom} onChange={handleChange}>\r\n        <Tabs.TabPane tab=\"待我处理\" key=\"wait\">\r\n          <SearchPanel></SearchPanel>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab=\"我的创建\" key=\"mine\">\r\n          <SearchPanel></SearchPanel>\r\n        </Tabs.TabPane>\r\n        <Tabs.TabPane tab=\"抄送给我\" key=\"other\">\r\n          <SearchPanel></SearchPanel>\r\n        </Tabs.TabPane>\r\n      </Tabs>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  & p {\r\n    margin: 0;\r\n  }\r\n  & > .ant-tabs-card .ant-tabs-content {\r\n    margin-top: -16px;\r\n  }\r\n  & > .ant-tabs-card .ant-tabs-content > .ant-tabs-tabpane {\r\n    padding: 16px;\r\n    background: #fff;\r\n  }\r\n  & > .ant-tabs-card > .ant-tabs-nav::before {\r\n    display: none;\r\n  }\r\n  & > .ant-tabs-card .ant-tabs-tab,\r\n  [data-theme=\"compact\"] & > .ant-tabs-card .ant-tabs-tab {\r\n    background: transparent;\r\n    border-color: transparent;\r\n  }\r\n  & > .ant-tabs-card .ant-tabs-tab-active,\r\n  [data-theme=\"compact\"] & > .ant-tabs-card .ant-tabs-tab-active {\r\n    background: #fff;\r\n    border-color: #fff;\r\n  }\r\n\r\n  & > .ant-tabs-card .ant-tabs-tab-btn {\r\n    font-size: 1.4rem;\r\n    font-weight: 400;\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport { Card, Col, Progress, Row, Spin } from \"antd\";\r\nimport React, { useContext } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { Project } from \"types/project\";\r\nimport { User } from \"types/User\";\r\nimport { useProjects, useProjectTypes } from \"utils/project\";\r\nimport { useUser } from \"utils/user\";\r\nimport { WorkList } from \"./work-list\";\r\n\r\nexport const WorkListContext = React.createContext<{\r\n  users: User[];\r\n  projectTypes: { name: string; id: number }[];\r\n  taskStatus: { name: string; id: number }[];\r\n}>({ users: [], projectTypes: [], taskStatus: [] });\r\nexport const WorkListScreen = () => {\r\n  const { data: users } = useUser();\r\n  const { data: projectTypes } = useProjectTypes();\r\n\r\n  return (\r\n    <Container>\r\n      <WorkListContext.Provider\r\n        value={{\r\n          users: users ? users : [],\r\n          projectTypes: projectTypes ? projectTypes : [],\r\n          taskStatus: [\r\n            { name: \"新建\", id: 1 },\r\n            { name: \"进行中\", id: 2 },\r\n            { name: \"完成\", id: 3 },\r\n          ],\r\n        }}\r\n      >\r\n        <Top>\r\n          <ProjectItems />\r\n        </Top>\r\n        <Body>\r\n          <WorkList></WorkList>\r\n        </Body>\r\n      </WorkListContext.Provider>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport const ProjectItems = () => {\r\n  const { isLoading, data } = useProjects();\r\n  const list = data ? data.slice(0, 3) : [];\r\n  const navigate = useNavigate();\r\n  const handleNav = (route: string) => {\r\n    navigate(route);\r\n  };\r\n  if (isLoading) return <Spin size={\"large\"}></Spin>;\r\n  return (\r\n    <Row gutter={16}>\r\n      {list.map((project) => {\r\n        return (\r\n          <Col span={7} key={project.id}>\r\n            <ProjectItem\r\n              project={project}\r\n              onClick={() => {\r\n                handleNav(`/projects/${project.id}`);\r\n              }}\r\n            ></ProjectItem>\r\n          </Col>\r\n        );\r\n      })}\r\n      {list.length >= 3 ? (\r\n        <Col span={3}>\r\n          <Card\r\n            hoverable={true}\r\n            bodyStyle={{ paddingLeft: 0, paddingRight: 0, textAlign: \"center\" }}\r\n            onClick={() => {\r\n              handleNav(\"/projects\");\r\n            }}\r\n          >\r\n            ...\r\n          </Card>\r\n        </Col>\r\n      ) : null}\r\n    </Row>\r\n  );\r\n};\r\n\r\nconst ProjectItem = ({\r\n  project,\r\n  ...props\r\n}: {\r\n  project: Project;\r\n  onClick: () => void;\r\n}) => {\r\n  const { projectTypes } = useContext(WorkListContext);\r\n  return (\r\n    <Card hoverable={true} bodyStyle={{ padding: \"0\" }} {...props}>\r\n      <ProjectItemContent>\r\n        <Progress\r\n          type=\"circle\"\r\n          style={{ height: \"100%\", margin: \"1rem\" }}\r\n          width={46}\r\n          showInfo={false}\r\n          strokeWidth={12}\r\n        ></Progress>\r\n        <div className=\"project-content\">\r\n          <div>{project.name}</div>\r\n          <div>\r\n            {projectTypes.find((item) => item.id === project.type)?.name}\r\n          </div>\r\n        </div>\r\n        <div className=\"project-detail\">\r\n          <span>0</span>\r\n          <div>我的待办</div>\r\n        </div>\r\n      </ProjectItemContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  padding: 3.2rem;\r\n  height: 100%;\r\n  background-color: #f0f2f5;\r\n`;\r\nconst Top = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 2.4rem;\r\n`;\r\nconst Body = styled.div`\r\n  width: 100%;\r\n  border: 1px solid #dcdfe6;\r\n  -webkit-box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%), 0 0 6px 0 rgb(0 0 0 / 4%);\r\n  box-shadow: 0 2px 4px 0 rgb(0 0 0 / 12%), 0 0 6px 0 rgb(0 0 0 / 4%);\r\n`;\r\nconst ProjectItemContent = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  .project-content {\r\n    flex-basis: 100%;\r\n    & div:first-of-type {\r\n      font-size: 1.4rem;\r\n      margin-bottom: 1rem;\r\n    }\r\n    & div:last-of-type {\r\n      font-size: 1.2rem;\r\n      color: #909399;\r\n    }\r\n  }\r\n  & > .project-detail {\r\n    width: 8rem;\r\n    height: 100%;\r\n    text-align: center;\r\n    border-left: 1px solid #dcdfe6;\r\n    flex-shrink: 0;\r\n    span {\r\n      font-size: 3.6rem;\r\n      color: #303133;\r\n    }\r\n    div {\r\n      line-height: 18px;\r\n      font-size: 12px;\r\n      white-space: nowrap;\r\n      overflow: hidden;\r\n      color: #909399;\r\n    }\r\n  }\r\n`;\r\n","import { useAuth } from \"context/auth-context\";\r\nimport { ProjectListScreen } from \"screens/project-list\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Row } from \"components/lib\";\r\n// import { ReactComponent as SoftWareLogo } from \"assets/software-logo.svg\";\r\nimport { Dropdown, Menu, Button } from \"antd\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Navigate,\r\n  Route,\r\n  Routes,\r\n} from \"react-router-dom\";\r\nimport { ProjectScreen } from \"screens/project/index\";\r\nimport { ProjectModal } from \"screens/project-list/project-modal\";\r\nimport { useRouteType } from \"utils/url\";\r\nimport { WorkListScreen } from \"screens/works\";\r\nimport { TaskModal } from \"screens/kanban/task-modal\";\r\n\r\nexport const AuthenticatedApp = () => {\r\n  return (\r\n    <Container>\r\n      <Router>\r\n        <PageHeader></PageHeader>\r\n        <Main>\r\n          <Routes>\r\n            <Route path={\"/works\"} element={<WorkListScreen/>}></Route>\r\n            <Route path={\"/projects\"} element={<ProjectListScreen />}></Route>\r\n            <Route\r\n              path={\"/projects/:projectId/*\"}\r\n              element={<ProjectScreen />}\r\n            ></Route>\r\n            <Navigate to={\"/works\"}></Navigate>\r\n          </Routes>\r\n        </Main>\r\n        <ProjectModal />\r\n        <TaskModal/>\r\n      </Router>\r\n    </Container>\r\n  );\r\n};\r\n\r\ntype NavMenuProps = React.ComponentProps<typeof Menu>;\r\n\r\nconst PageHeader = () => {\r\n  const { logout, user } = useAuth();\r\n  const navigate = useNavigate();\r\n  const handleNav: NavMenuProps[\"onClick\"] = ({ key, keyPath, domEvent }) => {\r\n    navigate(\"/\" + key);\r\n  };\r\n  const selectedRoutes = useRouteType()\r\n  return (\r\n    <Header>\r\n      <HeaderLeft marginRight={true} marginBottom={false}>\r\n        <SoftWareLogo>\r\n          <Icon src=\"/logo-simple.png\" />\r\n          <Title>亿效</Title>\r\n        </SoftWareLogo>\r\n        <NavMenu mode=\"horizontal\" onClick={handleNav} selectedKeys={selectedRoutes}>\r\n          <Menu.Item key=\"works\" style={{ fontSize: \"1.4rem\" }}>\r\n            工作台\r\n          </Menu.Item>\r\n          <Menu.Item key=\"projects\" style={{ fontSize: \"1.4rem\" }}>\r\n            项目\r\n          </Menu.Item>\r\n        </NavMenu>\r\n      </HeaderLeft>\r\n      <HeaderRight>\r\n        <Dropdown\r\n          overlay={\r\n            <Menu>\r\n              <Menu.Item key={\"logout\"}>\r\n                <Button type={\"link\"} onClick={() => logout()}>\r\n                  登出\r\n                </Button>\r\n              </Menu.Item>\r\n            </Menu>\r\n          }\r\n        >\r\n          <UserContainer>\r\n            <img src=\"/tx.png\" alt=\"\" />\r\n            <div>Hi, {user?.name}</div>\r\n          </UserContainer>\r\n        </Dropdown>\r\n      </HeaderRight>\r\n    </Header>\r\n  );\r\n};\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 6rem 1fr;\r\n  grid-template-columns: 20rem 1fr 20rem;\r\n  grid-template-areas:\r\n    \"header header header\"\r\n    \"main main main\"\r\n    \"footer footer footer\";\r\n  height: 100vh;\r\n`;\r\n\r\n// grid-area 用来给grid子元素起名字\r\nconst Header = styled(Row)`\r\n  grid-area: header;\r\n  justify-content: space-between;\r\n  height: 100%;\r\n  background-color: #373d41;\r\n  -webkit-box-shadow: 0 1px 4px rgb(0 21 41 / 8%);\r\n  box-shadow: 0 1px 4px rgb(0 21 41 / 8%);\r\n  z-index: 1;\r\n`;\r\nconst HeaderLeft = styled(Row)``;\r\nconst SoftWareLogo = styled.div`\r\n  height: 100%;\r\n  line-height: 50px;\r\n  background: #373d41;\r\n  text-align: center;\r\n  overflow: hidden;\r\n  padding: 0 16px;\r\n`;\r\nconst Icon = styled.img`\r\n  width: auto;\r\n  height: 28px;\r\n  vertical-align: middle;\r\n  margin-right: 8px;\r\n`;\r\nconst Title = styled.div`\r\n  display: inline-block;\r\n  margin: 0;\r\n  color: #fff;\r\n  font-weight: 600;\r\n  line-height: 50px;\r\n  font-size: 16px;\r\n`;\r\nconst NavMenu = styled(Menu)`\r\n  height: 50px;\r\n  padding: 0;\r\n  color: rgba(255, 255, 255, 0.65);\r\n  border-bottom-color: transparent;\r\n  background-color: rgb(55, 61, 65);\r\n`;\r\nconst UserContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin-right: 2rem;\r\n  cursor: pointer;\r\n  & > img {\r\n    cursor: pointer;\r\n    width: 24px;\r\n    height: 24px;\r\n    border-radius: 999px;\r\n    vertical-align: middle;\r\n    margin-right: 10px;\r\n  }\r\n  & > div {\r\n    font-size: 1.4rem;\r\n    color: hsla(0, 0%, 100%, 0.65);\r\n    vertical-align: middle;\r\n  }\r\n`;\r\nconst HeaderRight = styled.div``;\r\nconst Main = styled.main`\r\n  grid-area: main;\r\n`;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { UnauthenticatedApp } from \"screens/unauthenticated-app\";\r\nimport { AuthenticatedApp } from \"authenticated-app\";\r\nimport { useAuth } from \"context/auth-context\";\r\n\r\nfunction App() {\r\n  const { user } = useAuth();\r\n  return (\r\n    <div className=\"App\">\r\n      {user ? (\r\n        <AuthenticatedApp></AuthenticatedApp>\r\n      ) : (\r\n        <UnauthenticatedApp></UnauthenticatedApp>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { authSlice, State } from \"./auth.slice\";\r\n\r\nexport const store = configureStore<{ auth: State }>({\r\n  reducer: {\r\n    auth: authSlice.reducer,\r\n  },\r\n});\r\n\r\nexport type appDispatch = typeof store.dispatch;\r\nexport type rootState = ReturnType<typeof store.getState>;\r\n\r\n","import React, { ReactNode } from \"react\"\r\nimport {AuthProvider} from './auth-context'\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { ReactQueryDevtools } from 'react-query/devtools'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from 'store'\r\n\r\nexport const AppProviders = ({children}: {children: ReactNode}) => {\r\n    return <QueryClientProvider client={new QueryClient()}>\r\n        <ReactQueryDevtools initialIsOpen={false}></ReactQueryDevtools>\r\n        <Provider store={store}>\r\n        <AuthProvider>{children}</AuthProvider>\r\n        </Provider>\r\n    </QueryClientProvider>\r\n}","import React, { ReactElement, ReactNode } from 'react'\r\n\r\ntype FallbackRender = (props:{error:Error|null}) => ReactElement\r\n\r\nexport class ErrorBoundary extends React.Component<{children:ReactNode,fallbackRender:FallbackRender},{error: Error | null}>{\r\n    state = {\r\n        error: null\r\n    }\r\n\r\n    static getDerivedStateFromError(error:Error){\r\n        return {error}\r\n    }\r\n\r\n    render(){\r\n        const {error} = this.state\r\n        const {children,fallbackRender} = this.props\r\n        if(error){\r\n            fallbackRender({error})\r\n        }else{\r\n            return children\r\n        }\r\n    }\r\n}","import 'wdyr'\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { loadServer, DevTools } from 'jira-dev-tool'\r\nimport 'antd/dist/antd.less'\r\nimport { AppProviders } from \"context/index\";\r\nimport {ErrorBoundary} from 'components/error-boundary'\r\nimport {FullPageError} from 'components/lib'\r\n\r\nloadServer(() =>\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <AppProviders>\r\n        <DevTools/>\r\n        <ErrorBoundary fallbackRender={FullPageError}>\r\n        <App />\r\n        </ErrorBoundary>\r\n      </AppProviders>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n  )\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}